// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoReceitas.Data;

namespace ProjetoReceitas.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetoReceitas.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.CategoryRecipe", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("CategoriesRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Dificulty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dificulties");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.DificultyRecipe", b =>
                {
                    b.Property<int>("DificultyId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("DificultyId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("DificultiesRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.IngredientRecipe", b =>
                {
                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("IngredientsRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecipeBody")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Time", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Time");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.TimeRecipe", b =>
                {
                    b.Property<int>("TimeId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("TimeId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("TimesRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.UserRecipe", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("UserRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.CategoryRecipe", b =>
                {
                    b.HasOne("ProjetoReceitas.Models.Category", "Category")
                        .WithMany("CategoriesRecipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoReceitas.Models.Recipe", "Recipe")
                        .WithMany("CategoriesRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.DificultyRecipe", b =>
                {
                    b.HasOne("ProjetoReceitas.Models.Dificulty", "Dificulty")
                        .WithMany("DificultiesRecipes")
                        .HasForeignKey("DificultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoReceitas.Models.Recipe", "Recipe")
                        .WithMany("DificultiesRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dificulty");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.IngredientRecipe", b =>
                {
                    b.HasOne("ProjetoReceitas.Models.Ingredient", "Ingredient")
                        .WithMany("IngredientsRecipes")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoReceitas.Models.Recipe", "Recipe")
                        .WithMany("IngredientsRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.TimeRecipe", b =>
                {
                    b.HasOne("ProjetoReceitas.Models.Recipe", "Recipe")
                        .WithMany("TimesRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoReceitas.Models.Time", "Time")
                        .WithMany("TimesRecipes")
                        .HasForeignKey("TimeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("Time");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.UserRecipe", b =>
                {
                    b.HasOne("ProjetoReceitas.Models.Recipe", "Recipe")
                        .WithMany("UserRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetoReceitas.Models.User", "User")
                        .WithMany("UserRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Category", b =>
                {
                    b.Navigation("CategoriesRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Dificulty", b =>
                {
                    b.Navigation("DificultiesRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Ingredient", b =>
                {
                    b.Navigation("IngredientsRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Recipe", b =>
                {
                    b.Navigation("CategoriesRecipes");

                    b.Navigation("DificultiesRecipes");

                    b.Navigation("IngredientsRecipes");

                    b.Navigation("TimesRecipes");

                    b.Navigation("UserRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.Time", b =>
                {
                    b.Navigation("TimesRecipes");
                });

            modelBuilder.Entity("ProjetoReceitas.Models.User", b =>
                {
                    b.Navigation("UserRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
